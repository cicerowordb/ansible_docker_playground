- name: EXAMPLE03-Register Variables at Hosts as Facts
  hosts: ansible-srv1 ansible-srv2
  tasks:
    - name: Set facts
      set_fact:
        redis_host_address: 172.18.1.2
        redis_default_password: Ez5QrLhpQ+Nbl9FfCFnlOHu7
        redis_service_port: 6300
        redis_insight_port: 6800
        redis_server_volume_path: /opt/redis_data
        app_tcp_port: 5300
        app_flask_version: 3.0.0
        app_redisom_version: 0.2.1
        app_volume_path: /opt/app_ex03
        cacheable: no

- name: EXAMPLE03-Install Docker
  hosts: ansible-srv1 ansible-srv2
  become: true
  roles:
    - install_docker_single_mode

- name: EXAMPLE03-Install Redis Stack
  hosts: ansible-srv2
  become: true
  roles:
    - create_container_redis

- name: EXAMPLE03-Create Application Zip File
  hosts: localhost
  become: true
  tasks:
    - name: Create Applicaion Zip File
      archive:
        path: code/example03/
        dest: /tmp/example03.zip
        format: zip

- name: EXAMPLE03-Create Application container
  hosts: ansible-srv1
  become: true
  tasks:

    - name: Install Unzip
      apt:
        name: unzip
        state: latest
        update_cache: true

    - name: Create Application Directory
      file:
        path: "{{ app_volume_path }}"
        state: directory
        mode: '0755'

    - name: Send the Application Code Zip file
      unarchive:
        src: /tmp/example03.zip
        dest: "{{ app_volume_path }}"

    - name: Download Application Base Container
      docker_image:
        name: python:3.9.18-slim-bullseye
        source: pull

    - name: Create Application Container
      docker_container:
        name: app_ex03
        image: python:3.9.18-slim-bullseye
        state: started
        recreate: yes
        restart: yes
        ports:
          - "{{ app_tcp_port }}:{{ app_tcp_port }}"
        env:
          REDIS_ARGS: "--requirepass {{ redis_default_password }}"
        volumes:
          - "{{ app_volume_path }}:{{ app_volume_path }}"
        container_default_behavior: compatibility
        command: bash -c "cd {{ app_volume_path }}; python3 -m pip install flask=={{ app_flask_version }} redis-om=={{ app_redisom_version }} -t .; export REDIS_OM_URL=redis://default:{{ redis_default_password }}@{{ redis_host_address }}:{{ redis_service_port }}; python -m flask --app app run --host 0.0.0.0 --port {{ app_tcp_port }} & sleep 1d"

